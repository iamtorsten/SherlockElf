name: SherlockElf

on:
  workflow_dispatch:
  push:
    branches: ["main", "ci"]

permissions:
  contents: write

jobs:
  ios_build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Set IOS_CERTID environment variable
      run: echo "IOS_CERTID=${{ secrets.IOS_CERTID }}" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        brew update
        brew install ninja meson python@3.12
        brew install openssl@1.1
        brew unlink openssl@3 || true  # Unlink OpenSSL 3, if installed
        brew link openssl@1.1 --overwrite  # Link OpenSSL 1.1 and overwrite any conflicts
        sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain $(brew --prefix openssl@1.1)/etc/openssl@1.1/cert.pem || true

    - name: Import the certificate and private key
      run: |
        echo "${{ secrets.CERTIFICATE_P12 }}" | base64 --decode > certificate.p12
        security unlock-keychain -p "${{ secrets.CERTIFICATE_PASSWORD }}" ~/Library/Keychains/login.keychain-db
        security import certificate.p12 -k ~/Library/Keychains/login.keychain-db -P "${{ secrets.CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
        security unlock-keychain -p "${{ secrets.CERTIFICATE_PASSWORD }}" ~/Library/Keychains/login.keychain-db
        security set-key-partition-list -S apple-tool:,apple: -s -k "${{ secrets.CERTIFICATE_PASSWORD }}" ~/Library/Keychains/login.keychain-db
        rm certificate.p12
      env:
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

    - name: Clone Frida repository with submodules
      run: |
        git clone --recurse-submodules https://github.com/frida/frida
        cd frida
        git submodule update --init --recursive

    - name: Apply patches to frida-core
      shell: bash
      run: |
        if [ -d "frida/subprojects/frida-core" ]; then
          cd frida/subprojects/frida-core
          for patch in ${{ github.workspace }}/patches/frida-core/*.patch; do
            git am "$patch"
          done
        else
          echo "Directory frida/subprojects/frida-core does not exist"
          exit 1
        fi

    - name: Build Frida server for iOS
      shell: bash
      run: |
        mkdir -p build-ios-arm64
        cd build-ios-arm64
        ../frida/configure --host=ios-arm64
        ninja || { echo "Build failed for ios-arm64"; ls -alh; exit 1; }

    - name: Package frida-server for iOS
      shell: bash
      run: |
        gzip build-ios-arm64/subprojects/frida-core/server/frida-server

    - name: Upload iOS arm64 frida-server for SherlockElf
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.checkReleaseVersion.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/build-ios-arm64/subprojects/frida-core/server/frida-server.gz
        asset_name: SherlockElf-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-ios-arm64.gz
        asset_content_type: application/octet-stream
