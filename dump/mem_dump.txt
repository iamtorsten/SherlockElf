0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	shr	bl, 0x1a
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rbx], al
0x1009:	add	al, 0
0x100b:	add	byte ptr [rax], al
0x100d:	add	byte ptr [rax], al
0x100f:	add	dh, dl
-> ----------------------------------------------- <-
0x1000:	add	al, bh
0x1002:	cli	
0x1003:	add	byte ptr [rax], al
0x1005:	add	byte ptr [rax], al
0x1007:	add	byte ptr [rax + 0x1bd7], cl
0x100d:	add	byte ptr [rax], al
0x100f:	add	byte ptr [rbx], al
0x1011:	add	al, 0
0x1013:	add	byte ptr [rax], al
0x1015:	add	byte ptr [rax], al
0x1017:	add	ah, ch
0x1019:	and	bh, bl
0x101b:	add	byte ptr [rax], al
0x101d:	add	byte ptr [rax], al
0x101f:	add	byte ptr [rax + 0x1bd7], dl
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rbx], al
0x1029:	add	al, 0
0x102b:	add	byte ptr [rax], al
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax + 8], dl
-> ----------------------------------------------- <-
0x1000:	fmul	st(2)
0x1002:	call	qword ptr [rdi - 0x4ffff3a0]
0x1008:	add	al, al
0x100a:	cmp	al, 0x91
0x100c:	stc	
0x100d:	leave	
0x100e:	call	qword ptr [rdi - 0x6bfe918]
0x1014:	test	eax, 0x1ff85c83
0x1019:	add	dword ptr [rcx], ecx
0x101b:	jmp	0xffe
0x101d:	add	byte ptr [rax], al
0x101f:	push	rsp
0x1020:	std	
0x1021:	jnp	0x106d
0x1023:	test	eax, 0xa9494ff4
0x1028:	not	byte ptr [rdi + 0x48]
0x102b:	test	eax, 0xf9403bf7
0x1030:	inc	ebx
0x1032:	add	dl, byte ptr [rcx - 0x29a0fc40]
0x1038:	outsb	dx, byte ptr [rsi]
0x1039:	retf	
0x103a:	call	qword ptr [rdi - 0x7e1f00d]
0x1040:	std	
0x1041:	jnp	0x1044
0x1043:	test	eax, 0x910043fd
0x1048:	xchg	ebx, eax
0x1049:	or	al, 0
0x104b:	nop	
0x104c:	jae	0x1030
0x104e:	cmp	eax, 0xa0191
0x1053:	shl	byte ptr [rcx], 1
0x1055:	pop	rax
-> ----------------------------------------------- <-
0x1000:	or	cl, bh
0x1002:	jg	0xfd7
0x1004:	or	dword ptr [rcx + 0x2b], ebp
0x1007:	mov	eax, 0x1400065d
0x100c:	sub	dword ptr [rax], eax
0x100e:	adc	byte ptr [rdx - 0x57], 0x83
0x1012:	sbb	al, bh
0x1014:	add	al, byte ptr [rax + 0x5883a952]
0x101b:	clc	
0x101c:	stosb	byte ptr [rdi], al
0x101d:	add	ebx, dword ptr [rdx]
0x101f:	clc	
0x1020:	stosb	byte ptr [rdi], al
0x1021:	add	ebx, dword ptr [rdx - 8]
0x1024:	or	eax, dword ptr [rax]
0x1026:	add	byte ptr [rax - 0x6efe0e95], dl
0x102c:	sub	dword ptr [rbp + 0xb], edi
0x102f:	wait	
0x1030:	jns	0x1052
0x1033:	push	rbx
0x1034:	add	rax, 0x14c9100
0x103a:	jg	0x100e
0x103c:	lodsd	eax, dword ptr [rsi]
0x103d:	add	dword ptr [rsi - 0x6e], edi
0x1040:	push	0x7d
0x1042:	or	bl, byte ptr [rbx - 0x74f3fe55]
0x1048:	jge	0x1056
0x104b:	wait	
0x104c:	jmp	0x1041
0x104e:	add	dword ptr [rdx - 0xd6aaa95], esi
0x1054:	jge	0x1022
0x1057:	wait	
0x1058:	imul	edi, ebp, 0x41
0x105b:	shr	dword ptr [rbx + 5], cl
0x105e:	or	ecx, dword ptr [rbx - 0x34f4feb6]
0x1064:	or	eax, dword ptr [rax]
0x1066:	add	byte ptr [rax - 0x6ecb3e95], dl
0x106c:	add	qword ptr [rbx], rcx
0x106f:	mov	edi, dword ptr [rdi]
0x1071:	pop	rsp
0x1072:	add	byte ptr [rcx + 0x29], dh
0x1075:	xor	dword ptr [rdx + 0x1f01209a], ecx
-> ----------------------------------------------- <-
0x1000:	movabs	al, byte ptr [0x779100c274540002]
0x1009:	and	al, byte ptr [rax]
0x100b:	xchg	ecx, eax
0x100c:	loopne	0x1011
0x100e:	adc	al, 0xaa
0x1010:	mov	esp, 0xe097ff4b
0x1015:	add	edx, dword ptr [rdx + rbp*4]
0x1018:	mov	bh, 0xa
0x101a:	add	cl, bh
0x101c:	in	eax, 0x49
0x101e:	call	qword ptr [rdi - 0x6eff9d60]
-> ----------------------------------------------- <-
0x1000:	add	qword ptr [rax], r8
0x1003:	push	rsp
0x1004:	or	byte ptr [rbp + 8], ah
0x1007:	sbb	ecx, dword ptr [rcx]
0x1009:	jge	0xfc3
0x100b:	wait	
0x100c:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	mov	r9b, 0xa0
0x1003:	jb	0x1024
0x1005:	add	dword ptr [rcx], ecx
0x1007:	imul	ecx, dword ptr [rdx], 0x2a
0x100a:	add	byte ptr [rcx + rbp*8 - 0x7e], dl
-> ----------------------------------------------- <-
0x1000:	stosd	dword ptr [rdi], eax
0x1001:	sbb	dword ptr [r8 - 0x47a67c56], edi
0x1008:	stosd	dword ptr [rdi], eax
0x1009:	pop	r9
0x100b:	mov	eax, 0x7107517f
0x1010:	add	qword ptr [rax], r8
0x1013:	push	rsp
0x1014:	and	qword ptr [rdx], rcx
0x1017:	sbb	ecx, dword ptr [rbx + 0x7d]
0x101a:	test	eax, 0x60fd6b9b
0x101f:	ror	dword ptr [rcx + rax + 0xb], cl
0x1023:	imul	rax, qword ptr [rip + 0x7d6b0b4c], 2
0x102b:	push	rbx
0x102c:	imul	ecx, dword ptr [rip + 0x14a4b0b], 0xb
0x1033:	or	ebp, edx
0x1035:	std	
0x1036:	push	qword ptr [rax + rcx*8]
0x1039:	xor	eax, 0x10695280
0x103e:	adc	byte ptr [rdx - 0x58], 3
0x1042:	sbb	edi, dword ptr [rax - 0x47e53c57]
0x1048:	test	al, 3
0x104a:	pop	rbx
0x104b:	mov	eax, 0x52994369
0x1050:	imul	ecx, dword ptr [rip + 0x7d0872a5], 0x750a1b08
-> ----------------------------------------------- <-
0x1000:	test	byte ptr [rcx - 2], cl
0x1003:	xchg	edi, eax
0x1004:	test	al, 6
0x1006:	add	al, dl
0x1008:	test	eax, 0xd00006
0x100d:	sar	dword ptr [rip - 0x2bd92df], 0x68
0x1015:	sbb	dword ptr [rdx - 0x7ffcbeae], eax
0x101b:	push	rdx
0x101c:	add	byte ptr [rax], al
0x101e:	cmp	byte ptr [rip - 0x2fff7ff], 8
0x1025:	xor	byte ptr [rax], al
0x1027:	jns	0xfdc
0x1029:	movabs	al, byte ptr [0x960f90602a09402]
0x1032:	add	al, dh
0x1034:	add	byte ptr [rax], ah
0x1036:	xor	byte ptr [rcx - 0x6801b612], dl
0x103c:	mov	ebp, 0x6c17ffff
-> ----------------------------------------------- <-
0x1000:	or	dword ptr [rax], eax
0x1002:	adc	byte ptr [rdx], 0
0x1005:	or	eax, 0x3f34e08
0x100a:	add	byte ptr [rdx - 0x6fffbff], ch
-> ----------------------------------------------- <-
0x1000:	inc	dword ptr [rbx]
0x1002:	add	edx, ecx
0x1004:	hlt	
0x1005:	or	r13b, byte ptr [r9 - 0x56f48403]
0x100c:	std	
0x100d:	ret	
0x100e:	add	dl, byte ptr [rcx - 0x4ffffa38]
0x1014:	push	rsp
0x1015:	sar	byte ptr [rbx], 1
-> ----------------------------------------------- <-
0x1000:	loopne	0x1005
0x1002:	add	dl, byte ptr [rcx - 0x6bfe9538]
0x1008:	sub	byte ptr [rcx], al
0x100a:	adc	byte ptr [rdx + 8], 0x20
0x100e:	movabs	al, byte ptr [0x1f03e11100050072]
0x1017:	sub	ah, dl
0x1019:	add	ebx, dword ptr [rdi]
0x101b:	stosb	byte ptr [rdi], al
0x101c:	jrcxz	0x1021
-> ----------------------------------------------- <-
0x1000:	loopne	0x1045
0x1002:	add	byte ptr [rcx - 0x55e9fc1f], dl
0x1008:	leave	
-> ----------------------------------------------- <-
0x1000:	leave	
0x1001:	adc	al, byte ptr [rsi]
0x1003:	mov	eax, 0xb90937ea
0x1008:	in	eax, 0xec
0x100a:	call	qword ptr [rdi + 0x3964c3e8]
0x1010:	push	-0x1fca0000
0x1015:	movabs	dword ptr [0x26897fd096af944], eax
0x101e:	mov	ecx, 0x3500e7c8
0x1024:	rcl	byte ptr [rsi], 0
0x1027:	xchg	esp, eax
0x1028:	add	al, byte ptr [rax]
0x102a:	add	al, dl
0x102c:	dec	dword ptr [rdi + 0x1c04f904]
0x1032:	add	byte ptr [rax + rbp*8 + 0x42392463], dl
0x1039:	adc	byte ptr [rdi], cl
0x103b:	xchg	ecx, eax
0x103c:	loope	0x10a1
0x103e:	and	al, 0x91
0x1040:	fcom	qword ptr [rbx]
0x1042:	add	byte ptr [rdi + rdi*8 - 0x6fb69], dl
0x1049:	xchg	ebx, eax
0x104a:	add	al, 0xf9
0x104c:	leave	
0x104d:	xchg	edx, eax
0x104e:	add	al, 0xb8
-> ----------------------------------------------- <-
0x1000:	sub	ebp, edi
-> ----------------------------------------------- <-
0x1000:	jg	0xf9f
0x1002:	add	dh, byte ptr [rcx - 0x74]
0x1005:	add	dword ptr [rax], eax
0x1007:	push	rsp
0x1008:	jge	0x1015
0x100b:	sbb	ecx, dword ptr [rdx + 0x75]
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rip + 0x2a84a15], eax
0x1006:	shr	byte ptr [rcx], cl
0x1009:	add	dword ptr [rdi - 0x6e], edi
0x100c:	lahf	
0x100d:	push	0x35
0x100f:	cmp	byte ptr [rax], cl
0x1011:	add	dword ptr [rcx], ecx
0x1013:	retf	
0x1014:	mov	dword ptr [rdx + 0x68], ebp
0x1017:	cmp	byte ptr [rdi], bh
0x1019:	mov	ebp, 0x417100
0x101e:	add	byte ptr [rdi + rbx*4 + 0x6a], dl
0x1022:	sub	byte ptr [rax], bh
0x1024:	loopne	0x1049
0x1026:	add	dl, byte ptr [rcx - 0x6effdc1f]
0x102c:	hlt	
0x102d:	and	eax, dword ptr [rdx]
0x102f:	xchg	ecx, eax
0x1030:	test	al, 0x4a
0x1032:	cld	
0x1033:	xchg	edi, eax
0x1034:	movabs	al, byte ptr [0x8b9401be8350000]
0x103d:	or	eax, 0x111f1214
0x1042:	jno	0x1025
0x1045:	add	al, 0
0x1047:	push	rsp
0x1048:	xchg	esp, eax
0x1049:	add	al, byte ptr [rax - 0x4e]
0x104c:	cmc	
0x104d:	add	eax, 0x35280
0x1052:	add	byte ptr [rax + rbp*2], dl
0x1055:	add	eax, dword ptr [rax]
0x1057:	xor	al, 0x94
-> ----------------------------------------------- <-
0x1000:	push	0x43
0x1002:	cdq	
0x1003:	push	rdx
0x1004:	push	0xd
0x1006:	movsd	dword ptr [rdi], dword ptr [rsi]
0x1007:	jb	0x1011
0x1009:	jge	0x1015
0x100b:	sbb	ecx, edx
0x100d:	imul	ecx, dword ptr [rax - 0x5e50d5ae], 0x72
-> ----------------------------------------------- <-
0x1000:	not	byte ptr [rdi + 0x41]
0x1003:	test	eax, 0x910103ff
0x1008:	rol	byte ptr [rbx], 0x5f
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rax], al
0x1002:	cmp	dword ptr [rcx - 0x680003c3], edx
0x1008:	push	0x48395462
0x100d:	add	al, 0
-> ----------------------------------------------- <-
0x1000:	sub	dword ptr [rax], eax
0x1002:	add	byte ptr [rsp + rcx*4], dl
0x1005:	loope	0x1048
0x1007:	cmp	esp, ecx
0x1009:	add	dword ptr [rax], edx
-> ----------------------------------------------- <-
0x1000:	jne	0xf9a
0x1002:	nop	
0x1003:	add	byte ptr [rip - 0x4ad7dbac], bl
0x1009:	or	eax, dword ptr [rax]
0x100b:	add	byte ptr [rbp + 8], dh
0x100e:	nop	
0x100f:	or	al, 0x30
0x1011:	ror	byte ptr [rdx + 0x44649], 1
-> ----------------------------------------------- <-
0x1000:	cmc	
0x1001:	add	al, 0x26
0x1003:	ret	
0x1004:	cmc	
0x1005:	and	al, 0x41
0x1007:	movabs	al, byte ptr [0x730f111966098019]
-> ----------------------------------------------- <-
0x1000:	test	al, 0x32
0x1002:	add	al, byte ptr [rax]
0x1004:	sub	al, 0x56
0x1006:	stc	
0x1007:	dec	eax
0x1009:	xor	al, byte ptr [rdx]
0x100b:	add	byte ptr [rsi + rdx*2 - 7], dh
-> ----------------------------------------------- <-
0x1000:	sub	al, 0
0x1002:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	add	byte ptr [rsp + rcx + 0x1d], bl
0x1004:	adc	byte ptr [rsi - 0x6cfb62fe], bl
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-
0x1000:	jg	0x1047
0x1002:	add	r8b, byte ptr [rcx]
0x1006:	add	dword ptr [rax], eax
0x1008:	add	byte ptr [rax], al
0x100a:	add	byte ptr [rax], al
0x100c:	add	byte ptr [rax], al
0x100e:	add	byte ptr [rax], al
0x1010:	add	eax, dword ptr [rax]
0x1012:	mov	bh, 0
0x1014:	add	dword ptr [rax], eax
0x1016:	add	byte ptr [rax], al
0x1018:	loopne	0x1049
0x101a:	add	al, byte ptr [rax]
0x101c:	add	byte ptr [rax], al
0x101e:	add	byte ptr [rax], al
0x1020:	add	byte ptr [rax], al
0x1023:	add	byte ptr [rax], al
0x1025:	add	byte ptr [rax], al
0x1027:	add	byte ptr [rax + 0x1bcf], bh
0x102d:	add	byte ptr [rax], al
0x102f:	add	byte ptr [rax], al
0x1031:	add	byte ptr [rax], al
0x1033:	add	byte ptr [rax], al
0x1036:	cmp	byte ptr [rax], al
0x1038:	or	byte ptr [rax], al
0x103a:	add	byte ptr [rax], bl
0x103d:	add	byte ptr [rdi], dl
0x103f:	add	byte ptr [rcx], al
0x1041:	add	byte ptr [rax], al
0x1043:	add	byte ptr [rip], al
0x1049:	add	byte ptr [rax], al
0x104b:	add	byte ptr [rax], al
0x104d:	add	byte ptr [rax], al
0x104f:	add	byte ptr [rax], al
0x1051:	add	byte ptr [rax], al
0x1053:	add	byte ptr [rax], al
0x1055:	add	byte ptr [rax], al
0x1057:	add	byte ptr [rax], al
0x1059:	add	byte ptr [rax], al
0x105b:	add	byte ptr [rax], al
0x105d:	add	byte ptr [rax], al
0x105f:	add	al, cl
0x1061:	push	0x1a
0x1066:	add	byte ptr [rax], al
0x1068:	enter	0x1a68, 0
0x106c:	add	byte ptr [rax], al
0x106e:	add	byte ptr [rax], al
0x1070:	add	byte ptr [rax], dl
0x1072:	add	byte ptr [rax], al
0x1074:	add	byte ptr [rax], al
0x1076:	add	byte ptr [rax], al
0x1078:	add	dword ptr [rax], eax
0x107a:	add	byte ptr [rax], al
-> ----------------------------------------------- <-